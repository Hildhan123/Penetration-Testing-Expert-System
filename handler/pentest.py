import time
from zapv2 import ZAPv2
import json

def spider_scan(zap, target, progress_callback=None):
    if progress_callback:
        progress_callback("Spidering target {}".format(target))
    scanID = zap.spider.scan(target)
    while int(zap.spider.status(scanID)) < 100:
        if progress_callback:
            progress_callback('Spider progress %: {}'.format(zap.spider.status(scanID)))
        time.sleep(1)

def passive_scan(zap, progress_callback=None):
    while int(zap.pscan.records_to_scan) > 0:
        if progress_callback:
            progress_callback('Records to passive scan : ' + zap.pscan.records_to_scan)
        time.sleep(2)

def active_scan(zap, target, progress_callback=None):
    if progress_callback:
        progress_callback('Active Scanning target {}'.format(target))
    scanID = zap.ascan.scan(target)
    while int(zap.ascan.status(scanID)) < 100:
        if progress_callback:
            progress_callback('Active Scan progress %: {}'.format(zap.ascan.status(scanID)))
        time.sleep(5)

def run_pentest(url, progress_callback=None):
    apiKey = '6omhb2g6o0mkkv64vqlb0cg57o'
    target = url

    zap = ZAPv2(apikey=apiKey)
    # zap.core.delete_all_alerts(apikey=apiKey)
    zap.core.new_session(apikey=apiKey)

    # Spider Scan
    spider_scan(zap, target, progress_callback)

    # Passive Scan
    passive_scan(zap, progress_callback)

    # Active Scan
    active_scan(zap, target, progress_callback)

    if progress_callback:
        progress_callback('Penetration complete')

    raw = zap.core.alerts()
    data = [item for item in raw if item['confidence'] in ['Medium', 'High'] and item['risk'] != 'Informational']

    return data
